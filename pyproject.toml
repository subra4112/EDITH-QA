[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "edith-qa"
version = "1.0.0"
description = "Intelligent Android UI Testing Framework with Multi-Agent AI"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "EDITH-QA Team", email = "team@edith-qa.com"}
]
maintainers = [
    {name = "EDITH-QA Team", email = "team@edith-qa.com"}
]
keywords = ["ai", "testing", "android", "automation", "agents", "ui"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "opencv-python>=4.5.0",
    "pyautogui>=0.9.50",
    "pillow>=8.0.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "requests>=2.28.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "tqdm>=4.64.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]
android = [
    "android-env>=1.2.3",
    "dm-env>=1.6.0",
    "grpcio-tools>=1.71.0",
    "protobuf>=5.29.5",
]
agents = [
    "transformers>=4.20.0",
    "torch>=1.12.0",
    "paddleocr>=2.7.0",
    "paddlepaddle>=2.5.0",
    "pytesseract>=0.3.10",
    "google-generativeai>=0.3.0",
]
all = [
    "edith-qa[dev,android,agents]"
]

[project.urls]
Homepage = "https://github.com/yourusername/edith-qa"
Documentation = "https://github.com/yourusername/edith-qa#readme"
Repository = "https://github.com/yourusername/edith-qa.git"
Issues = "https://github.com/yourusername/edith-qa/issues"
Changelog = "https://github.com/yourusername/edith-qa/blob/main/CHANGELOG.md"

[project.scripts]
edith-qa = "edith_core.cli:main"
edith-test = "edith_core.test_runner:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["edith_core*", "Agent-S*", "android_world*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
edith_core = ["*.yaml", "*.yml", "*.json"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["edith_core"]
known_third_party = ["numpy", "pandas", "opencv", "pyautogui", "openai", "anthropic"]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "pyautogui.*",
    "android_env.*",
    "dm_env.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["edith_core"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".env",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", "env"]
skips = ["B101", "B601"]
