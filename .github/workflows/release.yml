name: 🚀 Release & Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📥 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: 🧪 Run tests
      run: |
        python -m pytest tests/ -v

    - name: 🏗️ Build package
      run: |
        pip install build twine
        python -m build

    - name: 📦 Check package
      run: |
        twine check dist/*

    - name: 📝 Generate changelog
      id: changelog
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          TAG=${GITHUB_REF#refs/tags/}
        else
          TAG=${{ github.event.inputs.version }}
        fi
        
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        
        # Generate changelog from git commits
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$PREV_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD)
        else
          CHANGELOG="- Initial release"
        fi
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 🏷️ Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: Release ${{ steps.changelog.outputs.tag }}
        body: |
          ## 🎉 What's New in ${{ steps.changelog.outputs.tag }}
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## 📦 Installation
          
          ```bash
          pip install edith-qa==${{ steps.changelog.outputs.tag }}
          ```
          
          ## 📚 Documentation
          
          - [Installation Guide](https://github.com/${{ github.repository }}/blob/main/docs/INSTALLATION.md)
          - [Usage Guide](https://github.com/${{ github.repository }}/blob/main/docs/USAGE.md)
          - [API Reference](https://github.com/${{ github.repository }}/blob/main/docs/API.md)
          
          ## 🤝 Contributing
          
          We welcome contributions! See our [Contributing Guide](https://github.com/${{ github.repository }}/blob/main/CONTRIBUTING.md) for details.
        draft: false
        prerelease: false

    - name: 📤 Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/
        asset_name: edith-qa-${{ steps.changelog.outputs.tag }}-dist.tar.gz
        asset_content_type: application/gzip

  publish-pypi:
    name: 📦 Publish to PyPI
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📥 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: 🏗️ Build package
      run: |
        python -m build

    - name: 📦 Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

  docker:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    needs: release

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔐 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🏗️ Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/edith-qa:latest
          ${{ secrets.DOCKER_USERNAME }}/edith-qa:${{ steps.changelog.outputs.tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
